---
- name: Create sub dirs for service of {{role_name}}
  file:
    path: "{{qbroker_dir}}/{{item}}/{{service_id}}"
    state: directory
    owner: "{{qbroker_user}}"
    group: "{{qbroker_group}}"
    mode: 0775
  with_items:
    - cfg
    - flow
    - jndi

- include: artifact.yml
  vars:
    qb_artifact: "{{my_artifact|default(qbroker_artifact)}}"

- include: security_plugin.yml
  when: qbroker_security_plugin != None

- name: Copy json files for {{role_name}}
  copy:
    src: "flow/{{item}}"
    dest: "{{qbroker_dir}}/flow/{{service_id}}/"
    owner: "{{qbroker_user}}"
    group: "{{qbroker_group}}"
    mode: 0664
  with_items: "{{my_json_files}}"
  notify: "Restart_{{role_name}}"

- name: Template of QFlow.sh for {{role_name}}
  template:
    src: ../../qbroker/templates/QFlow.sh.j2
    dest: "{{qbroker_dir}}/bin/QFlow_{{service_id}}.sh"
    owner: "{{qbroker_user}}"
    group: "{{qbroker_group}}"
    mode: 0775
  vars:
    id: "{{service_id}}"
    qb_dir: "{{qbroker_dir}}"
    qb_user: "{{qbroker_user}}"
    log_dir: "{{my_logdir|default(qbroker_logdir)}}"
    java: "{{my_java|default(qbroker_java)}}"
    java_opts: "{{my_java_opts|default(qbroker_java_opts)}}"
    jar_files: "{{my_jar_files}}"
  notify: "Restart_{{role_name}}"

- name: Open admin port for {{role_name}}
  iptables:
    chain: INPUT
    destination_port: "{{admin_port}}"
    action: insert
    jump: ACCEPT
    match: state
    ctstate: NEW
    protocol: tcp
    state: present
  register: port_admin_result
  when: admin_port is defined and admin_port > 0 and common_iptables != 'disabled'

- name: Save iptables for {{role_name}}
  command: "/sbin/iptables-save"
  when: port_admin_result is changed

- name: Template of flow.service for {{role_name}}
  template:
    src: ../../qbroker/templates/flow.service.j2
    dest: "{{qbroker_systemd_dir}}/system/{{role_name}}.service"
    mode: 0644
  vars:
    id: "{{service_id}}"
    qb_dir: "{{qbroker_dir}}"
    qb_user: "{{qbroker_user}}"
    qb_group: "{{qbroker_group}}"
  notify: "Restart_{{role_name}}"
  register: qb_flow_script

- name: Get stats of monitrc for {{role_name}}
  stat:
    path: "{{monit_dir}}/monitrc"
    get_md5: no
    get_checksum: no
  register: st_monitrc

- name: Template of flow.monit for {{role_name}}
  template:
    src: ../../qbroker/templates/flow.monit.j2
    dest: "{{monit_includedir}}/{{role_name}}.monit"
    mode: 0644
  vars:
    id: "{{service_id}}"
    qb_dir: "{{qbroker_dir}}"
    flow_name: "{{role_name}}"
  when: st_monitrc.stat.exists
  notify: Restart_monit.service

- name: Enable the service for {{role_name}}
  systemd:
    name: "{{role_name}}"
    daemon_reload: yes
    enabled: yes
  when: qb_flow_script is changed
  failed_when: False
